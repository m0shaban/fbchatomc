#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
ูุงุฌูุฉ ูุญุงุฏุซุฉ ูุญููุฉ ูุงุฎุชุจุงุฑ ุดุงุช ุจูุช ูุฌูุน ุนูุงู ูุตุฑ
ุชุณุชุฎุฏู ูุฐู ุงููุงุฌูุฉ ูุงุฎุชุจุงุฑ ูุชูููู ุฃุฏุงุก ุงูุดุงุช ุจูุช ูุจู ูุดุฑู ุนูู ููุณุจูู
"""

import os
import json
import random
import datetime
import subprocess
import logging
import re
from typing import Dict, Any, Optional, Tuple

from bot import ChatBot
from config import BOT_SETTINGS, APP_SETTINGS, init

# ุชููุฆุฉ ุงูุฅุนุฏุงุฏุงุช
init()

# ุฅุนุฏุงุฏ ุงูุชุณุฌูู
logging.basicConfig(
    level=getattr(logging, APP_SETTINGS["LOG_LEVEL"]),
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    filename=APP_SETTINGS.get("LOG_FILE")
)
logger = logging.getLogger(__name__)

def save_conversation(conversation: Dict[str, Any]) -> None:
    """
    ุญูุธ ุงููุญุงุฏุซุฉ ูู ููู JSON
    
    :param conversation: ูุงููุณ ูุญุชูู ุนูู ุจูุงูุงุช ุงููุญุงุฏุซุฉ
    """
    # ุฅูุดุงุก ุงุณู ุงูููู ุจุงุณุชุฎุฏุงู ุงูููุช ุงูุญุงูู
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"local_chat_{timestamp}.json"
    
    # ุงูุชุฃูุฏ ูู ูุฌูุฏ ูุฌูุฏ ุงููุญุงุฏุซุงุช
    if not os.path.exists(BOT_SETTINGS["CONVERSATIONS_DIR"]):
        os.makedirs(BOT_SETTINGS["CONVERSATIONS_DIR"], exist_ok=True)
    
    # ุญูุธ ุงููุญุงุฏุซุฉ ูู ููู JSON
    filepath = os.path.join(BOT_SETTINGS["CONVERSATIONS_DIR"], filename)
    try:
        with open(filepath, 'w', encoding='utf-8') as f:
            json.dump(conversation, f, ensure_ascii=False, indent=4)
        print(f"ุชู ุญูุธ ุงููุญุงุฏุซุฉ ูู ุงูููู: {filepath}")
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุญูุธ ุงููุญุงุฏุซุฉ: {e}")
        print(f"ุฎุทุฃ ูู ุญูุธ ุงููุญุงุฏุซุฉ: {e}")

def set_console_arabic() -> bool:
    """
    ุชุนููู ุชุฑููุฒ ูุญุฏุฉ ุงูุชุญูู ูุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ
    
    :return: True ุฅุฐุง ุชู ุชุนููู ุงูุชุฑููุฒ ุจูุฌุงุญ
    """
    try:
        # ูุญุงููุฉ ุชุนููู ุชุฑููุฒ ูุญุฏุฉ ุงูุชุญูู ุฅูู UTF-8
        if os.name == 'nt':  # ูุธุงู Windows
            # ุงุณุชุฎุฏุงู subprocess ุจุฏูุงู ูู os.system ูุชุญุณูู ุงูุชูุงูู
            subprocess.run(['chcp', '65001'], check=True, shell=True)
        return True
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุชุนููู ุชุฑููุฒ ูุญุฏุฉ ุงูุชุญูู: {e}")
        print(f"ุชุญุฐูุฑ: ูุฏ ูููู ููุงู ูุดููุฉ ูู ุนุฑุถ ุงููุต ุงูุนุฑุจู ุจุณุจุจ ุฎุทุฃ ูู ุชุนููู ุงูุชุฑููุฒ: {e}")
        return False

def print_welcome() -> None:
    """
    ุทุจุงุนุฉ ุฑุณุงูุฉ ุชุฑุญูุจูุฉ
    """
    print("\n" + "=" * 50)
    print("ูุฑุญุจุงู ุจู ูู ูุงุฌูุฉ ุงุฎุชุจุงุฑ ุดุงุช ุจูุช ูุฌูุน ุนูุงู ูุตุฑ!")
    print("ูุฐู ุงููุงุฌูุฉ ุชุณูุญ ูู ุจุงุฎุชุจุงุฑ ุงูุดุงุช ุจูุช ูุจู ูุดุฑู ุนูู ููุณุจูู")
    print("ุงูุชุจ 'ุฎุฑูุฌ' ููุฎุฑูุฌ ูู ุงููุงุฌูุฉุ ุฃู 'ุญูุธ' ูุญูุธ ุงููุญุงุฏุซุฉ")
    print("=" * 50 + "\n")

def test_connection() -> bool:
    """
    ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DeepSeek API
    
    :return: True ุฅุฐุง ูุฌุญ ุงูุงุชุตุงู
    """
    try:
        print("ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DeepSeek API...")
        
        # ุฅูุดุงุก ูุณุฎุฉ ูู ุงูุดุงุช ุจูุช
        bot = ChatBot()
        
        # ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุนู ุทุฑูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงุฎุชุจุงุฑ
        test_message = "ุงุฎุชุจุงุฑ ุงูุงุชุตุงู"
        
        # ุชุญุถูุฑ ุงููุณุชุฎุฏู ุงููููู ููุงุฎุชุจุงุฑ
        user_id = "test_connection"
        bot.conversation_state[user_id] = {"awaiting_name": False}
        
        # ุชูุฌูู ุฑุณุงูุฉ ุงุฎุชุจุงุฑ
        api_response = bot.api.generate_response(
            test_message, 
            context="ูุฐุง ุงุฎุชุจุงุฑ ุงุชุตุงู ููุทุ ูุฑุฌู ุงูุฑุฏ ุจู 'ุงุฎุชุจุงุฑ ูุงุฌุญ' ููุท."
        )
        
        # ุงูุชุญูู ูู ุงูุงุณุชุฌุงุจุฉ
        if api_response and "choices" in api_response:
            print("โ ุชู ุงูุงุชุตุงู ุจู DeepSeek API ุจูุฌุงุญ!")
            logger.info("ูุฌุญ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DeepSeek API")
            return True
        else:
            print("โ ูุดู ุงูุงุชุตุงู ุจู DeepSeek API!")
            logger.error(f"ูุดู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DeepSeek API: {api_response}")
            return False
            
    except Exception as e:
        print(f"โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงุฎุชุจุงุฑ ุงูุงุชุตุงู: {e}")
        logger.error(f"ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DeepSeek API: {e}")
        return False

def load_data_file(data_file: str = "data.json") -> Dict:
    """
    ุชุญููู ุจูุงูุงุช ูู ููู JSON
    
    :param data_file: ูุณุงุฑ ููู ุงูุจูุงูุงุช
    :return: ุงูุจูุงูุงุช ุงููุญููุฉ ููุงููุณ
    """
    try:
        with open(data_file, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"ุฎุทุฃ ูู ุชุญููู ููู ุงูุจูุงูุงุช: {e}")
        return {}

def get_company_info(data_file: str = "data.json") -> str:
    """
    ุงูุญุตูู ุนูู ูุนูููุงุช ุนู ูุฌูุน ุนูุงู ูุตุฑ
    
    :param data_file: ูุณุงุฑ ููู ุงูุจูุงูุงุช
    :return: ูุต ุงููุนูููุงุช
    """
    data = load_data_file(data_file)
    
    # ุงูุจุญุซ ุนู ุงูุณุคุงู ุงููุชุนูู ุจุงููุนูููุงุช ุงูุนุงูุฉ ุนู ุงููุฌูุน
    about_company = ""
    leadership = ""
    projects = ""
    
    for prompt in data.get("prompts", []):
        if prompt.get("id") == 1:  # ูุง ูู ูุฌูุน ุนูุงู ูุตุฑุ
            about_company = prompt.get("answer", "")
        elif prompt.get("id") == 2:  # ูู ูุฏูุฑ ุงููุฌูุนุ
            leadership = prompt.get("answer", "")
        elif prompt.get("id") == 3:  # ูุง ูู ุฃุจุฑุฒ ูุดุฑูุนุงุช ุงููุฌูุนุ
            projects = prompt.get("answer", "")
    
    # ุชุฌููุน ุงููุนูููุงุช ูู ุฑุฏ ุดุงูู
    return f"""ูุนูููุงุช ุนู ูุฌูุน ุนูุงู ูุตุฑ:

โข *ูุจุฐุฉ ุนู ุงููุฌูุน*:
{about_company}

โข *ููุงุฏุฉ ุงููุฌูุน*:
{leadership}

โข *ุฃุจุฑุฒ ุงููุดุฑูุนุงุช*:
{projects}

ููููู ุฒูุงุฑุฉ ูููุนูุง ุงูุฑุณูู ููุญุตูู ุนูู ูุนูููุงุช ุฃูุซุฑ ุชูุตููุงู: https://www.omalmisr.com/
ุฃู ุงูุชูุงุตู ูุนูุง ูุจุงุดุฑุฉ ุนุจุฑ:
๐ ุชููููู/ูุงุชุณุงุจ: {data.get("contact_info", {}).get("whatsapp", {}).get("main_office", "01100901200")}
โ๏ธ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: {data.get("contact_info", {}).get("email", "info@omalmisr.com")}
"""

def handle_local_response(user_message: str, data_file: str = "data.json") -> Tuple[str, bool]:
    """
    ุงูุชุนุงูู ูุน ุงูุงุณุชุฌุงุจุงุช ุงููุญููุฉ ููุฃุณุฆูุฉ ุงููุญุฏุฏุฉ
    
    :param user_message: ุฑุณุงูุฉ ุงููุณุชุฎุฏู
    :param data_file: ูุณุงุฑ ููู ุงูุจูุงูุงุช
    :return: ุฒูุฌ ูู ุงูุฑุฏ ููุคุดุฑ ูุญุฏุฏ ูุง ุฅุฐุง ุชู ุงูุนุซูุฑ ุนูู ุฑุฏ ูุญูู
    """
    user_message = user_message.lower().strip()
    
    # ูุงุฆูุฉ ูู ุฃููุงุท ุงูุฃุณุฆูุฉ ูุฑุฏูุฏูุง
    local_patterns = [
        (
            r'(ูุนูููุงุช|ุงูู|ุฅูู|ุดูู|ูุง ูู|ูุงูู|ูุง ูู|ูุงูู|ุงุนุฑู|ุฃุนุฑู).*?(ุดุฑูุฉ|ุดุฑูู|ุงููุฌูุน|ูุฌูุน|ุงููุคุณุณุฉ|ูุคุณุณุฉ|ูุคุณุณู)',
            get_company_info(data_file)
        ),
        (
            r'(ููู|ูู|ูู ูู|ูููู).*?(ุตุงุญุจ|ูุงูู|ุฑุฆูุณ|ูุฏูุฑ|ูุฏูุฑ).*?(ุงูุดุฑูุฉ|ุงูุดุฑูู|ุงููุฌูุน|ูุฌูุน)',
            lambda: load_data_file(data_file).get("prompts", [])[1].get("answer", "") if len(load_data_file(data_file).get("prompts", [])) > 1 else ""
        ),
        (
            r'(ูุดุงุท|ูุดุงุทุงุช|ูุนุงููุงุช|ูุดุงุฑูุน|ูุดุฑูุนุงุช|ุฅูุฌุงุฒุงุช|ุงูุฌุงุฒุงุช).*?(ุงูุดุฑูุฉ|ุงูุดุฑูู|ุงููุฌูุน|ูุฌูุน)',
            lambda: load_data_file(data_file).get("prompts", [])[2].get("answer", "") if len(load_data_file(data_file).get("prompts", [])) > 2 else ""
        ),
        (
            r'(ุฃูู|ุงูู|ููู|ููู|ููุงู|ูููุน|ุนููุงู|ููุฑ).*?(ุงูุดุฑูุฉ|ุงูุดุฑูู|ุงููุฌูุน|ูุฌูุน)',
            lambda: load_data_file(data_file).get("prompts", [])[9].get("answer", "") if len(load_data_file(data_file).get("prompts", [])) > 9 else ""
        ),
    ]
    
    # ูุญุงููุฉ ูุทุงุจูุฉ ุฑุณุงูุฉ ุงููุณุชุฎุฏู ูุน ุงูุฃููุงุท
    for pattern, response in local_patterns:
        if re.search(pattern, user_message, re.IGNORECASE):
            # ุฅุฐุง ูุงูุช ุงูุงุณุชุฌุงุจุฉ ุฏุงูุฉุ ูู ุจุชูููุฐูุง ููุญุตูู ุนูู ุงูุฑุฏ
            if callable(response):
                return response(), True
            return response, True
    
    # ูู ูุชู ุงูุนุซูุฑ ุนูู ุชุทุงุจู
    return "", False

def main() -> None:
    """
    ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ููุงุฌูุฉ ุงููุญุงุฏุซุฉ ุงููุญููุฉ
    """
    # ูุญุงููุฉ ุชุนููู ุชุฑููุฒ ูุญุฏุฉ ุงูุชุญูู ูุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ
    set_console_arabic()
    
    # ุทุจุงุนุฉ ุฑุณุงูุฉ ุชุฑุญูุจูุฉ
    print_welcome()
    
    # ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DeepSeek API
    connection_success = test_connection()
    if not connection_success:
        print("\nุชุญุฐูุฑ: ูุดู ุงูุงุชุตุงู ุจู DeepSeek API. ุณูุณุชุฎุฏู ุงูุดุงุช ุจูุช ุขููุฉ ุงูุงุญุชูุงุท.")
    
    # ุชููุฆุฉ ุงูุดุงุช ุจูุช
    print("\nุฌุงุฑู ุชููุฆุฉ ุงูุดุงุช ุจูุช...")
    bot = ChatBot()
    print("ุชู ุชููุฆุฉ ุงูุดุงุช ุจูุช ุจูุฌุงุญ.")
    
    # ุชุนููู ูุนุฑู ุงููุณุชุฎุฏู ุงููุญูู
    user_id = f"local_user_{random.randint(1000, 9999)}"
    
    # ุจุฏุก ุงููุญุงุฏุซุฉ ูุน ุงูุดุงุช ุจูุช
    print("\nูุญุงุฏุซุฉ ุฌุฏูุฏุฉ ุจุฏุฃุช. ุงูุชุจ ุฑุณุงูุชู ุฃุฏูุงู:")
    
    # ุญููุฉ ุงููุญุงุฏุซุฉ
    while True:
        try:
            # ุงูุญุตูู ุนูู ุฑุณุงูุฉ ุงููุณุชุฎุฏู
            user_message = input("\nุฃูุช: ")
            
            # ุงูุชุญูู ูู ุฃูุงูุฑ ุงูุฎุฑูุฌ
            if user_message.strip().lower() in ["exit", "quit", "ุฎุฑูุฌ"]:
                print("\nุฅููุงุก ุงููุญุงุฏุซุฉ...")
                break
            
            # ุงูุชุญูู ูู ุฃูุฑ ุงูุญูุธ
            if user_message.strip().lower() in ["save", "ุญูุธ"]:
                # ุญูุธ ุงููุญุงุฏุซุฉ ุงูุญุงููุฉ
                if user_id in bot.conversation_history:
                    save_conversation(bot.conversation_history[user_id])
                else:
                    print("ูุง ุชูุฌุฏ ูุญุงุฏุซุฉ ูุญูุธูุง.")
                continue
            
            # ุงูุชุญูู ูู ุฃูุฑ ุงูุฅุญุตุงุฆูุงุช
            if user_message.strip().lower() in ["stats", "ุฅุญุตุงุฆูุงุช"]:
                # ุทุจุงุนุฉ ุฅุญุตุงุฆูุงุช ุงููุญุงุฏุซุฉ
                if user_id in bot.conversation_history and "messages" in bot.conversation_history[user_id]:
                    messages_count = len(bot.conversation_history[user_id]["messages"])
                    print(f"\nุฅุญุตุงุฆูุงุช ุงููุญุงุฏุซุฉ:")
                    print(f"ุนุฏุฏ ุงูุฑุณุงุฆู: {messages_count}")
                    print(f"ูุนุฑู ุงููุณุชุฎุฏู: {user_id}")
                    if "user_name" in bot.conversation_history[user_id]:
                        print(f"ุงุณู ุงููุณุชุฎุฏู: {bot.conversation_history[user_id]['user_name']}")
                else:
                    print("ูุง ุชูุฌุฏ ุฅุญุตุงุฆูุงุช ูุชุงุญุฉ.")
                continue
            
            # ุงูุชุญูู ูู ุงูุฑุฏูุฏ ุงููุญููุฉ
            local_response, found = handle_local_response(user_message)
            if found:
                print(f"\nูุญูุฏ ุณูุงูุฉ: {local_response}")
                continue
            
            # ุงูุญุตูู ุนูู ุฑุฏ ุงูุดุงุช ุจูุช
            try:
                response = bot.generate_response(user_message, user_id)
                print(f"\nูุญูุฏ ุณูุงูุฉ: {response}")
            except Exception as e:
                logger.error(f"ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุงูุฑุฏ: {e}")
                print(f"\nุญุฏุซ ุฎุทุฃ: {e}")
                print("ุงุณุชุฎุฏุงู ุฑุฏ ุงุญุชูุงุทู...")
                print("\nูุญูุฏ ุณูุงูุฉ: ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุฑุณุงูุชู. ููููู ุงูุชูุงุตู ูุนูุง ูุจุงุดุฑุฉ ุนูู ุฑูู ุงููุงุชู: 01100901200 ูุณูููู ุณุนุฏุงุก ุจูุณุงุนุฏุชู.")
            
        except KeyboardInterrupt:
            print("\n\nุชู ุฅููุงุก ุงููุญุงุฏุซุฉ ุจูุงุณุทุฉ ุงููุณุชุฎุฏู.")
            break
        
        except Exception as e:
            logger.error(f"ุฎุทุฃ ุบูุฑ ูุชููุน: {e}")
            print(f"\nุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน: {e}")
    
    # ุญูุธ ุงููุญุงุฏุซุฉ ุนูุฏ ุงูุฎุฑูุฌ
    if BOT_SETTINGS.get("SAVE_CONVERSATIONS", True) and user_id in bot.conversation_history:
        save_conversation(bot.conversation_history[user_id])
    
    print("\nุชู ุฅููุงุก ุงููุญุงุฏุซุฉ. ูุดูุฑู ุนูู ุงุฎุชุจุงุฑ ุงูุดุงุช ุจูุช!")

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        logger.critical(f"ุฎุทุฃ ูู ุชุดุบูู ุงููุงุฌูุฉ ุงููุญููุฉ: {e}")
        print(f"ุฎุทุฃ ูู ุชุดุบูู ุงููุงุฌูุฉ ุงููุญููุฉ: {e}")